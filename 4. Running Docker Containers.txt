# 4. Running Docker Containers
------------------------------

* Running a container
---------------------

	FOR STARTING ANY STOPPER CONTAINER

$ docker start big-star-collectibles

	THEN YOU RUN THE CONTAINER

$ docker run [OPTIONS] IMAGE[:TAG] [COMMAND] [ARG...]

	THERE ARE MULTIPLE OPTIONS THAT YOU CAN USE WITH THE DOCKER RUN COMMAND

$ docker run -it -d -p 5000:5000 -v ${PWD}:/app/code big-star-collectibles

. it : Specifies that the container should run in interactive mode

. d : Runs the container in detached mode (the container will run in the background and teh command prompt will return to the host system)

. p : maps a port in the host system, to a port inside of the container (this allows to access the application inside the container from the host system)

. v : mounts a volume inside the container -  syntax -> host directory:directory inside the container (allows to persist data across container restarts and share data between the host
system and the container)


	TO STOP THE CONTAINER

$ docker stop gallant_joliot (gracefully terminates a process, rather than killing it immediately)

$ docker kill gallant_joliot (sends the sig kill signal, which cannot be blocked or handled, You should be careful when using the kill command, as the killed child process doesn't notify
its parent that it received the kill signal, which can cause errors)

$ docker start big-star-collectibles


------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Listing containers
--------------------
$ docker ps


	TO DISPLAY ALL CONTAINERS, INCLUDING STOPPED CONTAINERS

$ docker ps -a


	TO SHOW A NUMBER OF THE LAST CREATED CONTAINERS, INCLUDING ALL STATES

$ docker ps -n 1


	TO DISPLAY ONLY THE CONTAINER IDS

$ docker ps -q


	TO DISPLAY THE TOTAL FILE SIZE OF ALL CONTAINERS

$ docker ps -s


	TO SHOW THE LAST CREATED CONTAINER


$ docker ps -l


	TO SHOW THE FULL OUTPUT

$ docker ps --no-trunc


	YOU CAN ALSO USE THE FILTER OPTION TO SEARCH FOR SPECIFIC CONTAINERS

$ docker ps --filter label="com.example.vendor"="Big Star Collectibles"


	IT'S ALSO VERY USEFUL TO SEARCH FOR CONTAINERS BASED ON THEIR EXIT CODE

$ docker ps -a --filter 'exited=137' --> (137 means that the container was killed)


	IS ALSO USEFUL TO FILTER BASED ON THE IMAGE OF A CONTAINER OR A DESCENDANT OF IT

$ docker ps --filter ancestor=big-star-collectibles:v2


	IT'S ALSO USEFUL TO FORMAT THE SEARCH RESULTS USING JSON

$ docker ps --filter label="com.example.vendor"="Big Star Collectibles" --format json


	YOU CAN ALSO FORMAT AS A TABLE, TO SHOW ONLY THE INFORMATION THAT YOU NEED

$ docker ps --filter label="com.example.vendor"="Big Star Collectibles" --format "table {{.ID}}\t{{.Names}}"


------------------------------------------------------------------------------------------------------------------------------------------------------------------







	















































